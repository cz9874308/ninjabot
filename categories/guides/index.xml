<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ninjabot â€“ Guides</title><link>https://rodrigo-brito.github.io/ninjabot/categories/guides/</link><description>Recent content in Guides on Ninjabot</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rodrigo-brito.github.io/ninjabot/categories/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Getting Started</title><link>https://rodrigo-brito.github.io/ninjabot/docs/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rodrigo-brito.github.io/ninjabot/docs/getting-started/</guid><description>
&lt;h2 id="install-cli">Install CLI&lt;/h2>
&lt;p>Ninjabot CLI provides utilities commands to support backtesting and bot development.&lt;/p>
&lt;p>You can install CLI with the following command&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">go install github.com/rodrigo-brito/ninjabot/cmd/ninjabot@latest
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or downloading pre-build binaries in &lt;a href="https://github.com/rodrigo-brito/ninjabot/releases">release page&lt;/a>.&lt;/p>
&lt;h2 id="creating-a-new-project">Creating a new project&lt;/h2>
&lt;p>Create a new Go project and initialize &lt;code>go module&lt;/code> with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">go mod init example
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download the latest version of Ninjabot library&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">go get -u github.com/rodrigo-brito/ninjabot/...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Downloading 720 days from BTCUSDT historical data for backtesting.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ninjabot download --pair BTCUSDT --timeframe 1d --days &lt;span style="color:#ae81ff">720&lt;/span> --output ./btc.csv
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-backtesting-script">Creating a backtesting script&lt;/h2>
&lt;p>Create a new file &lt;code>main.go&lt;/code> and include the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> (
&lt;span style="color:#e6db74">&amp;#34;context&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/rodrigo-brito/ninjabot&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/rodrigo-brito/ninjabot/examples/strategies&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/rodrigo-brito/ninjabot/exchange&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/rodrigo-brito/ninjabot/plot&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/rodrigo-brito/ninjabot/storage&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span>
)
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Background&lt;/span>()
&lt;span style="color:#75715e">// Ninjabot settings
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">settings&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">Settings&lt;/span>{
&lt;span style="color:#a6e22e">Pairs&lt;/span>: []&lt;span style="color:#66d9ef">string&lt;/span>{
&lt;span style="color:#e6db74">&amp;#34;BTCUSDT&amp;#34;&lt;/span>,
},
}
&lt;span style="color:#75715e">// Load a custom strategy from examples folder
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// To create a custom strategy, check https://rodrigo-brito.github.io/ninjabot/docs/strategy/.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">strategy&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> new(&lt;span style="color:#a6e22e">strategies&lt;/span>.&lt;span style="color:#a6e22e">CrossEMA&lt;/span>)
&lt;span style="color:#75715e">// Load your CSV with historical data
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">csvFeed&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">exchange&lt;/span>.&lt;span style="color:#a6e22e">NewCSVFeed&lt;/span>(
&lt;span style="color:#a6e22e">strategy&lt;/span>.&lt;span style="color:#a6e22e">Timeframe&lt;/span>(),
&lt;span style="color:#a6e22e">exchange&lt;/span>.&lt;span style="color:#a6e22e">PairFeed&lt;/span>{
&lt;span style="color:#a6e22e">Pair&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;BTCUSDT&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">File&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;btc.csv&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">Timeframe&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1d&amp;#34;&lt;/span>, &lt;span style="color:#75715e">// specify the dataset timeframe
&lt;/span>&lt;span style="color:#75715e">&lt;/span> },
)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#75715e">// Create a storage in memory
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">storage&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">storage&lt;/span>.&lt;span style="color:#a6e22e">FromMemory&lt;/span>()
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#75715e">// Create a virtual wallet with 10.000 USDT
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">wallet&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">exchange&lt;/span>.&lt;span style="color:#a6e22e">NewPaperWallet&lt;/span>(
&lt;span style="color:#a6e22e">ctx&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;USDT&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">exchange&lt;/span>.&lt;span style="color:#a6e22e">WithPaperAsset&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;USDT&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">10000&lt;/span>),
&lt;span style="color:#a6e22e">exchange&lt;/span>.&lt;span style="color:#a6e22e">WithDataFeed&lt;/span>(&lt;span style="color:#a6e22e">csvFeed&lt;/span>),
)
&lt;span style="color:#75715e">// Initialize a chart to plot trading results
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">chart&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">plot&lt;/span>.&lt;span style="color:#a6e22e">NewChart&lt;/span>(
&lt;span style="color:#a6e22e">plot&lt;/span>.&lt;span style="color:#a6e22e">WithStrategyIndicators&lt;/span>(&lt;span style="color:#a6e22e">strategy&lt;/span>), &lt;span style="color:#75715e">// load indicators from strategy
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">plot&lt;/span>.&lt;span style="color:#a6e22e">WithCustomIndicators&lt;/span>( &lt;span style="color:#75715e">// you can specify additiona indicators
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">indicator&lt;/span>.&lt;span style="color:#a6e22e">RSI&lt;/span>(&lt;span style="color:#ae81ff">14&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;purple&amp;#34;&lt;/span>),
&lt;span style="color:#a6e22e">indicator&lt;/span>.&lt;span style="color:#a6e22e">Stoch&lt;/span>(&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;red&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;blue&amp;#34;&lt;/span>),
),
&lt;span style="color:#a6e22e">plot&lt;/span>.&lt;span style="color:#a6e22e">WithPaperWallet&lt;/span>(&lt;span style="color:#a6e22e">wallet&lt;/span>), &lt;span style="color:#75715e">// necessary to display the equity chart
&lt;/span>&lt;span style="color:#75715e">&lt;/span> )
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#a6e22e">bot&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">NewBot&lt;/span>(
&lt;span style="color:#a6e22e">ctx&lt;/span>,
&lt;span style="color:#a6e22e">settings&lt;/span>,
&lt;span style="color:#a6e22e">wallet&lt;/span>,
&lt;span style="color:#a6e22e">strategy&lt;/span>,
&lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">WithBacktest&lt;/span>(&lt;span style="color:#a6e22e">wallet&lt;/span>),
&lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">WithStorage&lt;/span>(&lt;span style="color:#a6e22e">storage&lt;/span>),
&lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">WithCandleSubscription&lt;/span>(&lt;span style="color:#a6e22e">chart&lt;/span>),
&lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">WithOrderSubscription&lt;/span>(&lt;span style="color:#a6e22e">chart&lt;/span>),
&lt;span style="color:#a6e22e">ninjabot&lt;/span>.&lt;span style="color:#a6e22e">WithLogLevel&lt;/span>(&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WarnLevel&lt;/span>),
)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#75715e">// Execute backtest
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">bot&lt;/span>.&lt;span style="color:#a6e22e">Run&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#75715e">// Print bot results
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">bot&lt;/span>.&lt;span style="color:#a6e22e">Summary&lt;/span>()
&lt;span style="color:#75715e">// Display candlesticks chart in browser
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">chart&lt;/span>.&lt;span style="color:#a6e22e">Start&lt;/span>()
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To execute your strategy, just run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">go run main.go
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;pre tabindex="0">&lt;code>INFO[2021-10-31 18:13] [SETUP] Using paper wallet
INFO[2021-10-31 18:13] [SETUP] Initial Portfolio = 10000.000000 USDT
+---------+--------+-----+------+--------+--------+-----+----------+-----------+
| PAIR | TRADES | WIN | LOSS | % WIN | PAYOFF | SQN | PROFIT | VOLUME |
+---------+--------+-----+------+--------+--------+-----+----------+-----------+
| BTCUSDT | 14 | 6 | 8 | 42.9 % | 5.929 | 1.5 | 13511.66 | 448030.05 |
| ETHUSDT | 9 | 6 | 3 | 66.7 % | 3.407 | 1.3 | 21748.41 | 407769.64 |
+---------+--------+-----+------+--------+--------+-----+----------+-----------+
| TOTAL | 23 | 12 | 11 | 52.2 % | 4.942 | 1.4 | 35260.07 | 855799.68 |
+---------+--------+-----+------+--------+--------+-----+----------+-----------+
-- FINAL WALLET --
0.0000 BTC = 0.0000 USDT
0.0000 ETH = 0.0000 USDT
45260.0735 USDT
----- RETURNS -----
START PORTFOLIO = 10000.00 USDT
FINAL PORTFOLIO = 45260.07 USDT
GROSS PROFIT = 35260.073493 USDT (352.60%)
MARKET CHANGE (B&amp;amp;H) = 407.09%
------ RISK -------
MAX DRAWDOWN = -11.76 %
------ VOLUME -----
ETHUSDT = 407769.64 USDT
BTCUSDT = 448030.05 USDT
TOTAL = 855799.68 USDT
COSTS (0.001*V) = 855.80 USDT (ESTIMATION)
-------------------
Chart available at http://localhost:8080
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://user-images.githubusercontent.com/7620947/139601478-7b1d826c-f0f3-4766-951e-b11b1e1c9aa5.png" alt="SignatureJohnLennon">&lt;/p></description></item></channel></rss>